import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import React, { useState, useEffect } from "react";
import BlogItem from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { useRouter } from "next/router";
import { IBlogs } from "../../types";

interface Props {
  blogs: IBlogs[];
}

const Blog: NextPage<Props> = ({ blogs }) => {
  const router = useRouter();

  const [content, setContent] = useState<string>("");

  const handleClick = (category: string) => {
    router.push({
      pathname: "/blog",
      query:
        content !== ""
          ? {
              ...router.query,
              category: category,
            }
          : { category: category },
    });
  };

  const handleSearch = (content: string) => {
    router.push({
      pathname: "/blog",
      query:
        content !== ""
          ? {
              ...router.query,
              content: content,
            }
          : { category: router.query.category },
    });
  };

  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={"Blog"} />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {/* blog item */}
                {blogs.length > 0 ? (
                  blogs.map((blog) => {
                    return <BlogItem key={blog.id} blogs={blog} />;
                  })
                ) : (
                  <p>There are no results with your search.</p>
                )}

                {/* <p>There are no results with your search.</p> */}
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <form
                  className="bor17 of-hidden pos-relative"
                  onSubmit={(e: React.FormEvent<HTMLFormElement>) => {
                    e.preventDefault();
                    handleSearch(content);
                  }}
                >
                  <input
                    className="stext-103 cl2 plh4 size-116 p-lr-28 p-r-55"
                    type="text"
                    name="search"
                    placeholder="Search"
                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {
                      setContent(e.target.value);
                    }}
                    value={content}
                  />

                  <button
                    className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04"
                    type="submit"
                  >
                    <i className="zmdi zmdi-search"></i>
                  </button>
                </form>

                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>

                  <ul>
                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "fashion" &&
                          "filter-link-active"
                        }`}
                        onClick={(e: React.MouseEvent<HTMLButtonElement>) => {
                          handleClick("fashion");
                        }}
                      >
                        Fashion
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "beauty" &&
                          "filter-link-active"
                        }`}
                        onClick={(
                          e: React.MouseEvent<HTMLButtonElement>
                        ) => {
                          handleClick("beauty");
                        }}
                      >
                        Beauty
                      </button>
                    </li>

                    {/* Add the following lines for additional categories */}
                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "streetstyle" &&
                          "filter-link-active"
                        }`}
                        onClick={(
                          e: React.MouseEvent<HTMLButtonElement>
                        ) => {
                          handleClick("streetstyle");
                        }}
                      >
                        Street Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "lifestyle" &&
                          "filter-link-active"
                        }`}
                        onClick={(
                          e: React.MouseEvent<HTMLButtonElement>
                        ) => {
                          handleClick("lifestyle");
                        }}
                      >
                        Life Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "diy" &&
                          "filter-link-active"
                        }`}
                        onClick={(
                          e: React.MouseEvent<HTMLButtonElement>
                        ) => {
                          handleClick("diy");
                        }}
                      >
                        DIY & Crafts
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Blog;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  let res;
  if (query.category && query.content) {
    res = await fetch(
      `http://localhost:5001/blogs?category_like=${query.category}&q=${query.content}`
    );
  } else if (query.category) {
    res = await fetch(
      `http://localhost:5001/blogs?category_like=${query.category}`
    );
  } else if (query.content) {
    res = await fetch(`http://localhost:5001/blogs?q=${query.content}`);
  } else {
    res = await fetch(`http://localhost:5001/blogs`);
  }
  const blogs: IBlogs[] = await res.json();

  return {
    props: {
      blogs,
    },
  };
};
