import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { IProduct } from "../../types";
import { useRouter } from "next/router";
import { useState } from "react";

interface Props {
  propsData: IProduct[];
}

const Shop: NextPage<Props> = ({ propsData }) => {
  const router = useRouter();
  const [content, setContent] = useState<string>("");

  const handleCategories = (gender: string) => {
    router.push({
      pathname: "/shop",
      query: content !== "" ? { ...router.query, gender } : { gender },
    });
  };

  const handleSearchProduct = (content: string) => {
    router.push({
      pathname: "/shop",
      query:
        content !== "" && router.query.gender
          ? { ...router.query, content }
          : { content },
    });
  };

  const resetFilters = () => {
    setContent("");
    router.push({
      pathname: "/shop",
      query: {},
    });
  };

  return (
    <>
      <Head>
        <title>Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <div className="flex-w flex-sb-m p-b-52">
            <div className="flex-w flex-l-m filter-tope-group m-tb-10">
              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  Object.keys(router.query).length === 0 && `how-active1`
                }`}
                data-filter="*"
                onClick={resetFilters}
              >
                All Products
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  router.query.gender === "women" && `how-active1`
                }`}
                data-filter=".women"
                onClick={() => handleCategories("women")}
              >
                Women
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  router.query.gender === "man" && `how-active1`
                }`}
                data-filter=".man"
                onClick={() => handleCategories("man")}
              >
                Man
              </button>
            </div>

            <div
              className="flex-w flex-c-m m-tb-10"
              onClick={() => handleSearchProduct(content)}
            >
              <div className="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search show-search">
                <i className="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                Search
              </div>
            </div>

            {/* search */}
            <form
              className="panel-search w-full p-t-10 p-b-15"
              onSubmit={(event) => {
                event.preventDefault();
                handleSearchProduct(content);
              }}
            >
              <div className="bor8 dis-flex p-l-15">
                <button
                  className="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04"
                  type="submit"
                >
                  <i className="zmdi zmdi-search"></i>
                </button>

                <input
                  className="mtext-107 cl2 size-114 plh2 p-r-15"
                  type="text"
                  name="search-product"
                  placeholder="Search"
                  onChange={(event) => setContent(event.target.value)}
                  value={content}
                />
              </div>
            </form>
          </div>

          <div className="row isotope-grid">
            {propsData.length > 0 ? (
              propsData.map((product) => (
                <div
                  className={`col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item ${product.gender.toLowerCase()}`}
                  key={product.id}
                >
                  <div className="block2">
                    <div className="block2-pic hov-img0">
                      <img src={product.img} alt={product.title} />

                      <Link href={`/shop/${product.id}`}>
                        <a className="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1">
                          View Details
                        </a>
                      </Link>
                    </div>

                    <div className="block2-txt flex-w flex-t p-t-14">
                      <div className="block2-txt-child1 flex-col-l ">
                        <a
                          href={`/shop/${product.id}`}
                          className="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6"
                        >
                          {product.title}
                        </a>

                        <span className="stext-105 cl3">{product.price}</span>
                      </div>
                    </div>
                  </div>
                </div>
              ))
            ) : (
              <p className="ml-3">There are no results!</p>
            )}
          </div>
        </div>
      </div>
    </>
  );
};

export default Shop;

export const getServerSideProps: GetServerSideProps<Props> = async ({
  query,
}) => {
  let res;

  if (query.gender && query.content) {
    res = await fetch(
      `http://localhost:5001/products?gender=${query.gender}&q=${query.content}`
    );
  } else if (query.gender) {
    res = await fetch(`http://localhost:5001/products?gender=${query.gender}`);
  } else if (query.content) {
    res = await fetch(`http://localhost:5001/products?q=${query.content}`);
  } else {
    res = await fetch(`http://localhost:5001/products`);
  }

  const propsData: IProduct[] = await res.json();

  return {
    props: {
      propsData,
    },
  };
};
